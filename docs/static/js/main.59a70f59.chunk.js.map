{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","image","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAyBeA,EAtBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,sBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAIhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAbhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCNdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEKI,MAAMF,GAFX,cAEbG,EAFa,gBAGIA,EAAUC,OAHd,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,MAAK,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBb,QARrB,kBAWZM,GAXY,4CAAH,sDCEPQ,EAAc,SAAC,GAAyB,EAAvBL,GAAwB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACrC,OACI,sBAAKI,UAAU,yCAAf,UACI,qBACIC,IAAKL,EACLM,IAAKP,IAET,4BAAIA,QCLHQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SACxB,ECF0B,SAACA,GAC3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNc,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACRzB,EAAQC,GAAUyB,MAAM,SAAAf,GACpBa,EAAS,CACLhB,KAAMG,EACNW,SAAS,SAIhB,CAACrB,IAEGsB,EDd2BI,CAAa1B,GAAjCc,EAAd,EAAQP,KAAcc,EAAtB,EAAsBA,QAEtB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDjB,IACjDqB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,WAAf,SAEIH,EAAOL,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEWnBgB,EApBM,WACnB,MAAoCzC,mBAAS,CAAC,UAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KACA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACI2C,EAAWnB,KAAK,SAAAT,GAAQ,OAClB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCTrB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.59a70f59.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=iMkAce8oSVVMPFF7vAg8IqDBTlD3UL5K`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        image: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    return gifs;\r\n  };","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, image} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img \r\n                src={image}\r\n                alt={title}\r\n            />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n      <div className=\"cardGrid\">\r\n        {\r\n          images.map((img) => (\r\n            <GifGridItem key={img.id} {...img} />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then( img =>{\r\n        setState({\r\n            data: img,\r\n            loading: false,\r\n          })\r\n    } \r\n    );\r\n  }, [category]);\r\n\r\n  return state; // {data: [], loading: true}\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"React\"]);\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        { categories.map( category => \r\n                <GifGrid \r\n                key={category}\r\n                category={category}\r\n                />\r\n            ) \r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}